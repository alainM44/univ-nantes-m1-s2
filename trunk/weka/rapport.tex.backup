\documentclass[11pt,a4paper,utf8x]{article}
\usepackage [francais]{babel}
\usepackage[utf8]{inputenc}  
\usepackage[T1]{fontenc} 
% Pour pouvoir utiliser 


\usepackage{graphicx}

\usepackage{amssymb}
\usepackage{amsmath}
%\usepackage{pifont}
\usepackage{url} % Pour avoir de belles url
\usepackage{geometry}
\usepackage{hyperref}




\usepackage{graphicx} % Pour insérer des images (entres autres)

\hypersetup{
  backref=true,
  %permet d'ajouter des liens dans...
  pagebackref=true,%...les bibliographies
  hyperindex=true, %ajoute des liens dans les index.
  colorlinks=true, %colorise les liens
  breaklinks=true, %permet le retour à la ligne dans les liens trop longs
  urlcolor= blue, %couleur des hyperliens
  bookmarks=true, %créé des signets pour Acrobat
  bookmarksopen=true,
  %si les signets Acrobat sont créés,
  %les afficher complètement.
  pdftitle={Rapport de Romain Rincé : \\TP de weka}, %informations apparaissant dans
  pdfauthor={RINC\'E Romain},
  %dans les informations du document
  pdfsubject={Weka}
  %sous Acrobat.
}
%Entête pied de page
%Définition des entêtes : 


\title{Rapport du TP de weka\\Romain RINCÉ}


\usepackage{graphicx}


\begin{document}
\section{Exercice 1}
\subsection{Question 1}
Chaque instance est un mail qui sera déterminé comme étant un spam ou non. Il y a 4601 instances. Pour déterminer si une instance est un spam, on étudie la fréquence d'un ensemble de mots, divers calculs sur la longueur des chaines de caractères n'étant que des lettres capitales et la fréquence de certains caractères.
\subsection{Question 2}
Reorder réorganise l'ordre d'études des attributs.
Standardize va "décaler" les valeurs numériques pour que leurs moyennes soient à 0.
\subsection{Question 3}
\begin{itemize}
\item{OneR} 78.0917\% Correct, 477 mails classés spams, 531 spams passent, temps 0.17 seconds
\item{NaiveBayes} 79.2871\% Correct, 865 mails classés spams, 88 spams passent, 0.12 seconds
\item{J48} 92.9798\% Correct, 156 mails classés spams, 167 spams passent, temps 0.92 seconds
\item{RandomForest} 94.8272\% Correct, 78 mails classés spams, 160 spam passent, temps 1.16 seconds
\item{MultilayerPerceptron} 91.4366\% Correct, 192 mails classés spams, 202 spams passent, temps 95.83 seconds
\item{SMO} 90.4151\% Correct, 134 mails classés spams, 307 spams passent, temps 0.63 seconds
\end{itemize}
RandomForest est relativement rapide et est le plus efficace sur les vrais négatifs (C'est à dire les mails classés comme spams).
\section{Exercice 2}
\subsection{Question 1}
Voir script.py
\subsection{Question 3}
On peut voir que la matrice de coût n'influence pas l'algorithme appliqué. Cependant elle offre une information supplémentaire qui correspond au coût de la classification (Un coût total et un cout moyen).
Ainsi on peut voir les résultats suivants :
\begin{itemize}
\item{ZeroR} Coût total = 1500 et Coût moyen = 1.5
\item{OneR} Coût total = 1284 et Coût moyen = 1.284
\item{NaiveBayes} Coût total = 850 et Coût moyen = 0.850
\item{J48} Coût total = 1027 et Coût moyen = 1.027
\item{RandomForest} Coût total = 967  et Coût moyen = 0.967
\item{SMO} Coût total = 885 et Coût moyen = 0.885
\end{itemize}
On a donc une information supplémentaire pour évaluer la performance de l'algorithme pour un contexte donné.
\end{document}